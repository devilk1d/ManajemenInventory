/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfPTable;
import common.OpenPdf;
import dao.InventoryUtils;
import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import dao.Koneksi;
import java.io.FileOutputStream;
import javax.swing.table.TableModel;
import java.text.SimpleDateFormat;
import java.util.Calendar;
/**
 *
 * @author abima
 */
public class ManageOrder extends javax.swing.JFrame {
    
    private int customerPk = 0;
    private int productPk = 0;
    private int finalTotalPrice = 0;
    private String orderId = "";

    /**
     * Creates new form ManageOrder
     */
    public ManageOrder() {
        initComponents();
        setLocationRelativeTo(null);
    }
    
    private void clearProductFields() {
        productPk = 0;
        txtNamaProduct.setText("");
        txtHargaProduct.setText("");
        txtDeskProduk.setText("");
        txtJumlahOrder.setText("");
    }
    
    public String getUniqueId(String prefix) {
        return prefix + System.nanoTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCustomer = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableProduct = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableCart = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCustomerNama = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCustomerNoTelp = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtCustomerEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtNamaProduct = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtHargaProduct = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtDeskProduk = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtJumlahOrder = new javax.swing.JTextField();
        btnAddToCart = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        lblFinalTotalPrice = new javax.swing.JLabel();
        btnSimpanOrder = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SF Pro Display", 0, 36)); // NOI18N
        jLabel1.setText("Manage Order");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, -1, -1));

        jLabel2.setFont(new java.awt.Font("SF Pro Display", 1, 18)); // NOI18N
        jLabel2.setText("Customer List");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 103, -1, -1));

        tableCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama", "No. Telp", "Email"
            }
        ));
        tableCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCustomerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCustomer);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 138, 335, 258));

        jLabel3.setFont(new java.awt.Font("SF Pro Display", 1, 18)); // NOI18N
        jLabel3.setText("Product List");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 103, -1, -1));

        tableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama", "Harga", "Jumlah", "Deskripsi", "Category ID", "Category Name"
            }
        ));
        tableProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProductMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableProduct);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 138, 523, 258));

        jLabel4.setFont(new java.awt.Font("SF Pro Display", 1, 18)); // NOI18N
        jLabel4.setText("Cart");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1106, 103, -1, -1));

        tableCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Nama", "Jumlah", "Harga", "Deskripsi", "Sub Total"
            }
        ));
        tableCart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCartMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableCart);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(934, 138, 394, 258));

        jLabel5.setFont(new java.awt.Font("SF Pro Display", 1, 14)); // NOI18N
        jLabel5.setText("Selected Customer:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 418, -1, -1));

        jLabel6.setFont(new java.awt.Font("SF Pro Display", 1, 12)); // NOI18N
        jLabel6.setText("Nama");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 442, -1, -1));

        txtCustomerNama.setFont(new java.awt.Font("SF Pro Display", 1, 12)); // NOI18N
        getContentPane().add(txtCustomerNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 463, 335, 32));

        jLabel7.setFont(new java.awt.Font("SF Pro Display", 1, 12)); // NOI18N
        jLabel7.setText("No. Telp");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 507, -1, -1));

        txtCustomerNoTelp.setFont(new java.awt.Font("SF Pro Display", 1, 12)); // NOI18N
        getContentPane().add(txtCustomerNoTelp, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 528, 335, 32));

        jLabel8.setFont(new java.awt.Font("SF Pro Display", 1, 12)); // NOI18N
        jLabel8.setText("Email");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 572, -1, -1));

        txtCustomerEmail.setFont(new java.awt.Font("SF Pro Display", 1, 12)); // NOI18N
        getContentPane().add(txtCustomerEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 593, 335, 32));

        jLabel9.setFont(new java.awt.Font("SF Pro Display", 1, 14)); // NOI18N
        jLabel9.setText("Selected Product:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 418, -1, -1));

        jLabel10.setFont(new java.awt.Font("SF Pro Display", 1, 12)); // NOI18N
        jLabel10.setText("Nama Product");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 442, -1, -1));

        txtNamaProduct.setFont(new java.awt.Font("SF Pro Display", 1, 12)); // NOI18N
        getContentPane().add(txtNamaProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 463, 411, 32));

        jLabel11.setFont(new java.awt.Font("SF Pro Display", 1, 12)); // NOI18N
        jLabel11.setText("Harga ");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 507, -1, -1));

        txtHargaProduct.setFont(new java.awt.Font("SF Pro Display", 1, 12)); // NOI18N
        getContentPane().add(txtHargaProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 528, 411, 32));

        jLabel12.setFont(new java.awt.Font("SF Pro Display", 1, 12)); // NOI18N
        jLabel12.setText("Deskripsi");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 572, -1, -1));

        txtDeskProduk.setFont(new java.awt.Font("SF Pro Display", 1, 12)); // NOI18N
        getContentPane().add(txtDeskProduk, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 593, 411, 32));

        jLabel13.setFont(new java.awt.Font("SF Pro Display", 1, 12)); // NOI18N
        jLabel13.setText("Jumlah Order");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 637, -1, -1));

        txtJumlahOrder.setFont(new java.awt.Font("SF Pro Display", 1, 12)); // NOI18N
        getContentPane().add(txtJumlahOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 658, 411, 32));

        btnAddToCart.setFont(new java.awt.Font("SF Pro Display", 1, 14)); // NOI18N
        btnAddToCart.setText("Add To Cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddToCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 702, 411, 36));

        jLabel14.setFont(new java.awt.Font("SF Pro Display", 1, 24)); // NOI18N
        jLabel14.setText("Total :");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(1045, 418, -1, -1));

        lblFinalTotalPrice.setFont(new java.awt.Font("SF Pro Display", 1, 24)); // NOI18N
        lblFinalTotalPrice.setText("00000");
        getContentPane().add(lblFinalTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(1119, 418, -1, -1));

        btnSimpanOrder.setFont(new java.awt.Font("SF Pro Display", 1, 14)); // NOI18N
        btnSimpanOrder.setText("Simpan Order Detail");
        btnSimpanOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanOrderActionPerformed(evt);
            }
        });
        getContentPane().add(btnSimpanOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(934, 463, 394, 30));

        btnReset.setFont(new java.awt.Font("SF Pro Display", 1, 14)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        getContentPane().add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(934, 528, 394, 30));

        btnClose.setFont(new java.awt.Font("SF Pro Display", 1, 14)); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(934, 593, 394, 30));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/background.jpg"))); // NOI18N
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 770));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        txtCustomerNama.setEditable(false);
        txtCustomerNoTelp.setEditable(false);
        txtCustomerEmail.setEditable(false);
        
        txtNamaProduct.setEditable(false);
        txtHargaProduct.setEditable(false);
        txtDeskProduk.setEditable(false);
        
        DefaultTableModel model = (DefaultTableModel) tableCustomer.getModel();
        DefaultTableModel productmodel = (DefaultTableModel) tableProduct.getModel();
        
        try{
            Connection con = Koneksi.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select *from customer");
            while(rs.next()) {
                model.addRow(new Object[]{rs.getString("customer_pk"),rs.getString("name"),rs.getString("noTelp"),rs.getString("email")});
            }
            
            rs = st.executeQuery("select *from product inner join category on product.category_fk = category.category_pk");
            while(rs.next()){
                productmodel.addRow(new Object[]{rs.getString("product_pk"),rs.getString("name"),rs.getString("price"),rs.getString("quantity"),rs.getString("description"),rs.getString("category_fk"),rs.getString(8)});
            }
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    private void btnSimpanOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanOrderActionPerformed
        // TODO add your handling code here:
        if(finalTotalPrice !=0 && !txtCustomerNama.getText().equals("")) {
            orderId = getUniqueId("Bill-");
            
            DefaultTableModel dtm = (DefaultTableModel) tableCart.getModel();
            if (tableCart.getRowCount() !=0) {
                for(int i=0; i<tableCart.getRowCount(); i++) {
                    try{
                        Connection con = Koneksi.getCon();
                        Statement st = con.createStatement();
                        st.executeUpdate("update product set quantity=quantity-" + Integer.parseInt(dtm.getValueAt(i, 2).toString()) + " where product_pk=" + Integer.parseInt(dtm.getValueAt(i, 0).toString()));
                    }
                    catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                }
            }
            
            try {
                SimpleDateFormat myFormat = new SimpleDateFormat("dd-mm-yyyy");
                Calendar cal = Calendar.getInstance();
                Connection con = Koneksi.getCon();
                PreparedStatement ps  = con.prepareStatement("insert into orderDetail(orderId, customer_fk, orderDate, totalPaid) values(?,?,?,?)");
                ps.setString(1, orderId);
                ps.setInt(2, customerPk);
                ps.setString(3, myFormat.format(cal.getTime()));
                ps.setInt(4, finalTotalPrice);
                ps.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            
            //Membuat Dokumen
            com.itextpdf.text.Document doc = new com.itextpdf.text.Document();
            try {
                SimpleDateFormat myFormat = new SimpleDateFormat("dd-mm-yyyy");
                Calendar cal = Calendar.getInstance();
                PdfWriter.getInstance(doc, new FileOutputStream(InventoryUtils.billPath+""+orderId+".pdf"));
                doc.open();
                Paragraph projectName = new Paragraph("                            Manajemen Inventory\n");
                doc.add(projectName);
                Paragraph starLine = new Paragraph("****************************************************************************");
                doc.add(starLine);
                Paragraph details = new Paragraph("\tOrder Id: " + orderId + "\nDate: " + myFormat.format(cal.getTime()) + "\nTotalPaid: " + finalTotalPrice);
                doc.add(details);
                doc.add(starLine);
                PdfPTable tbl = new PdfPTable(5);
                PdfPCell nameCell = new PdfPCell(new Phrase("Name"));
                PdfPCell descriptionCell = new PdfPCell(new Phrase("Deskripsi"));
                PdfPCell priceCell = new PdfPCell(new Phrase("Harga Per Unit "));
                PdfPCell quantityCell = new PdfPCell(new Phrase("Jumlah"));
                PdfPCell subTotalPriceCell = new PdfPCell(new Phrase("Total Harga"));
                
                BaseColor backgroundColor = new BaseColor(255,204,51);
                nameCell.setBackgroundColor(backgroundColor);
                descriptionCell.setBackgroundColor(backgroundColor);
                priceCell.setBackgroundColor(backgroundColor);
                quantityCell.setBackgroundColor(backgroundColor);
                subTotalPriceCell.setBackgroundColor(backgroundColor);
                
                tbl.addCell(nameCell);
                tbl.addCell(descriptionCell);
                tbl.addCell(priceCell);
                tbl.addCell(quantityCell);
                tbl.addCell(subTotalPriceCell);
                
                for(int i=0;i< tableCart.getRowCount();i++) {
                    tbl.addCell(tableCart.getValueAt(i, 1).toString());
                    tbl.addCell(tableCart.getValueAt(i, 4).toString());
                    tbl.addCell(tableCart.getValueAt(i, 3).toString());
                    tbl.addCell(tableCart.getValueAt(i, 2).toString());
                    tbl.addCell(tableCart.getValueAt(i, 5).toString());
                }
                
                doc.add(tbl);
                doc.add(starLine);
                Paragraph thanksMsg = new Paragraph("Terimakasih");
                doc.add(thanksMsg);
                OpenPdf.OpenById(orderId);
                
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            doc.close();
            setVisible(false);
            new ManageOrder().setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(null, "Masukkan Barang Ke Dalam Keranjang atau Pilih Customer");
        }
    }//GEN-LAST:event_btnSimpanOrderActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new ManageOrder().setVisible(true);
    }//GEN-LAST:event_btnResetActionPerformed

    private void tableCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCustomerMouseClicked
        // TODO add your handling code here:
        int index = tableCustomer.getSelectedRow();
        TableModel model = tableCustomer.getModel();
        String id = model.getValueAt(index, 0).toString();
        customerPk = Integer.parseInt(id);
        
        String name = model.getValueAt(index, 1).toString();
        txtCustomerNama.setText(name);
        
        String noTelp = model.getValueAt(index, 2).toString();
        txtCustomerNoTelp.setText(noTelp); 
        
        String email = model.getValueAt(index, 3).toString();
        txtCustomerEmail.setText(email); 
    }//GEN-LAST:event_tableCustomerMouseClicked

    private void tableProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProductMouseClicked
        // TODO add your handling code here:
        int index = tableProduct.getSelectedRow();
        TableModel model = tableProduct.getModel();
        String id = model.getValueAt(index, 0).toString();
        productPk = Integer.parseInt(id);
        
        String productName = model.getValueAt(index, 1).toString();
        txtNamaProduct.setText(productName);
        
        String productPrice = model.getValueAt(index, 2).toString();
        txtHargaProduct.setText(productPrice);
        
        String productDesc = model.getValueAt(index, 4).toString();
        txtDeskProduk.setText(productDesc);
    }//GEN-LAST:event_tableProductMouseClicked

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:
        String noOfUnits = txtJumlahOrder.getText();
        if(!noOfUnits.equals("")) {
            String productName = txtNamaProduct.getText();
            String productDesc = txtDeskProduk.getText();
            String productPrice = txtHargaProduct.getText();
            
            int totalPrice = Integer.parseInt(txtJumlahOrder.getText()) * Integer.parseInt(productPrice);
            
            int checkStock = 0;
            int checkProductSudahAdaDiCart = 0;
            
            try {
                Connection con = Koneksi.getCon();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("select *from product where product_pk=" + productPk + "");
                while(rs.next()) {
                    if(rs.getInt("quantity") >= Integer.parseInt(noOfUnits)) {
                        checkStock = 1;
                    }
                    else {
                        JOptionPane.showMessageDialog(null, "Product out of stock. Hanya " +rs.getString("quantity") + " Tersisa");
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            if (checkStock == 1) {
                DefaultTableModel model = (DefaultTableModel) tableCart.getModel();
                if (tableCart.getRowCount() !=0) {
                    for (int i = 0; i< tableCart.getRowCount(); i++) {
                        if (Integer.parseInt(model.getValueAt(i, 0).toString()) == productPk) {
                            checkProductSudahAdaDiCart = 1;
                            JOptionPane.showMessageDialog(null, "Produk sudah ada di Cart");
                        }
                    }
                }
                if(checkProductSudahAdaDiCart == 0) {
                    model.addRow(new Object [] {productPk, productName, noOfUnits, productPrice,productDesc,totalPrice});
                    finalTotalPrice = finalTotalPrice + totalPrice;
                    lblFinalTotalPrice.setText(String.valueOf(finalTotalPrice));
                    JOptionPane.showMessageDialog(null, "Berhasil Ditambahkan");
                }
                clearProductFields();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Masukkan Jumlah Barang");
        }
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void tableCartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCartMouseClicked
        // TODO add your handling code here:
        int index = tableCart.getSelectedRow();
        int a = JOptionPane.showConfirmDialog(null, "Apakah kamu mau menghapus produk ini?","Select",JOptionPane.YES_NO_OPTION);
        if(a == 0) {
            TableModel model = tableCart.getModel();
            String subTotal = model.getValueAt(index, 5).toString();
            finalTotalPrice = finalTotalPrice - Integer.parseInt(subTotal);
            lblFinalTotalPrice.setText(String.valueOf(finalTotalPrice));
            ((DefaultTableModel) tableCart.getModel()).removeRow(index);
        }
    }//GEN-LAST:event_tableCartMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSimpanOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblFinalTotalPrice;
    private javax.swing.JTable tableCart;
    private javax.swing.JTable tableCustomer;
    private javax.swing.JTable tableProduct;
    private javax.swing.JTextField txtCustomerEmail;
    private javax.swing.JTextField txtCustomerNama;
    private javax.swing.JTextField txtCustomerNoTelp;
    private javax.swing.JTextField txtDeskProduk;
    private javax.swing.JTextField txtHargaProduct;
    private javax.swing.JTextField txtJumlahOrder;
    private javax.swing.JTextField txtNamaProduct;
    // End of variables declaration//GEN-END:variables
}
